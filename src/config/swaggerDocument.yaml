openapi: 3.0.0
info:
  title: Expense tracker API
  version: 1.0.0
  description: API documentation for expense tracker

servers:
  - url: http://localhost:5000/api
    description: Local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Authorization header using the Bearer scheme.

  responses:
    InvalidArguments:
      description: Invalid arguments response
      content:
        application/json:
          schema:
            type: object
            properties:
              displayMessage:
                type: string,
                example: "Invalid arguments"
              statusCode:
                type: integer
                example: 400
              status:
                type: string,
                example: "failed"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              displayMessage:
                type: string,
                example: "Internal server error"
              statusCode:
                type: integer,
                example: 500
              status:
                type: string,
                example: "failed"

security:
  - bearerAuth: []

tags:
  - name: Auth
    description: Authentication and authorization endpoints
  - name: Users
    description: User management endpoints

paths:
  /auth/signup:
    post:
      tags: [Auth]
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [firstName, lastName, email, password]
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "User created successfully"
                  statusCode:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      accessToken:
                        type: string
        '400':
          $ref: '#/components/responses/InvalidArguments'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/login:
    post:
      summary: User login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Login successful"
                  statusCode:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
        '400':
          $ref: '#/components/responses/InvalidArguments'
        '401':
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Invalid credentials"
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "failed"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/reset-password:
    put:
      summary: Reset user password
      tags: [Auth]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, newPassword]
              properties:
                email:
                  type: string
                  format: email
                newPassword:
                  type: string
                  format: password
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Password reset successful"
                  statusCode:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: "success"
        '400':
          $ref: '#/components/responses/InvalidArguments'
        '401':
          description: Unauthorized - invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Invalid token"
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "failed"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /user/profile:
    get:
      tags: [Users]
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Profile retrieved successfully"
                  statusCode:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
        '401':
          description: Unauthorized - invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Invalid token"
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "failed"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /user/update-profile:
    put:
      tags: [Users]
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Profile updated successfully"
                  statusCode:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      updatedAt:
                        type: string
                        format: date-time
        '401':
          description: Unauthorized - invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Invalid token"
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "failed"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transaction/create:
    post:
      tags: [Transaction]
      summary: Create a new transaction
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount, type, category, date]
              properties:
                amount:
                  type: number
                  example: 10000
                type:
                  type: string
                  example: "income"
                category:
                  type: string
                  example: "salary"
                date:
                  type: string
                  example: "01/12/2024"
                  format: "DD/MM/YYYY"
                description:
                  type: string
      responses:
        '200':
          description: Transaction added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Transaction added successfully"
                  statusCode:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                      
        '400':
          $ref: '#/components/responses/InvalidArguments'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transaction/update/{id}:
    put:
      tags: [Transaction]
      summary: Update a new transaction
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          type: string 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount, type, category, date]
              properties:
                amount:
                  type: number
                  example: 1000
                type:
                  type: string
                  example: "expense"
                category:
                  type: string
                  example: "Travel"
                date:
                  type: string
                  example: "10/12/2024"
                description:
                  type: string
                  example: "Kodaikanal"
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Transaction updated successfully"
                  statusCode:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                      
        '400':
          $ref: '#/components/responses/InvalidArguments'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transaction/overview:
    get:
      tags: [Transaction]
      summary: Get Transaction overview for a month
      security:
        - bearerAuth: []
      params:
        - name: month
          in: query
          type: string
        - name: year
          in: query
          type: string
      responses:
        '200':
          description: Transaction data fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Profile retrieved successfully"
                  statusCode:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      income:
                        type: string
                      expense:
                        type: string
                      balance:
                        type: string
        '401':
          description: Unauthorized - invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayMessage:
                    type: string
                    example: "Invalid token"
                  statusCode:
                    type: integer
                    example: 401
                  status:
                    type: string
                    example: "failed"
        '400':
          $ref: '#/components/responses/InvalidArguments'
        '500':
          $ref: '#/components/responses/InternalServerError'

